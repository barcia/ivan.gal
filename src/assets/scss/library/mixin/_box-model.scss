// Specify the element size. If only pass one argument, the element is square
@mixin size($width, $height: $width) {
	width: $width;
	height: $height;
}



// Makes a circular element (with possibilities to expand in one axis)
@mixin circle($size) {
	width: $size;
	height: $size;
	border-radius: $size / 2;
}



// Full width over the passed margin
@mixin oversize($margin-x) {
	position: relative;
	left: 50%;
	width: calc(100% + (#{$margin-x} * 2));
	transform: translateX(-50%);
}



// Border top radius
@mixin border-top-radius($radius: $border-radius) {
	border-top-right-radius: $radius;
	border-top-left-radius: $radius;
}

// Border right radius
@mixin border-right-radius($radius: $border-radius) {
	border-top-right-radius: $radius;
	border-bottom-right-radius: $radius;
}

// Border bottom radius
@mixin border-bottom-radius($radius: $border-radius) {
	border-bottom-right-radius: $radius;
	border-bottom-left-radius: $radius;
}

// Border left radius
@mixin border-left-radius($radius: $border-radius) {
	border-bottom-left-radius: $radius;
	border-top-left-radius: $radius;
}



// Horizontal margin
@mixin margin-x($px) {
	margin-right: $px;
	margin-left: $px;
}

// Vertical margin
@mixin margin-y($px) {
	margin-top: $px;
	margin-bottom: $px;
}



// Horizontal padding
@mixin padding-x($px) {
	padding-right: $px;
	padding-left: $px;
}

// Vertical padding
@mixin padding-y($px) {
	padding-top: $px;
	padding-bottom: $px;
}



// Helper to clear inner floats
@mixin clearfix {
	&::after {
		clear: both;
		display: table;
		content: "";
	}
}
